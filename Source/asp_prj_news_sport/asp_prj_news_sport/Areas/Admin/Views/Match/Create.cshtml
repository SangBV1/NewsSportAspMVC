@model Model.EF.match
@{
    ViewBag.Title = "Thêm mới trận đấu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-lg-6 col-md-offset-3">
        <div class="panel panel-default">
            <div class="panel-heading">
                <strong>Nhập thông tin trận đấu</strong>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">
                        @using (Html.BeginForm("Create", "Match", FormMethod.Post))
                        {
                            <div class="form-horizontal">
                                @Html.AntiForgeryToken()
                                <div class="form-group">
                                    <div class="col-md-11 col-md-offset-1">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.date_at, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.date_at, new { @class = "form-control", @type = "date" })
                                        @Html.ValidationMessageFor(model => model.date_at, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.time_at, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.time_at, new { @class = "form-control",@type="time" })
                                        @Html.ValidationMessageFor(model => model.time_at, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.pitch, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.pitch, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.pitch, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.home_club, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.home_club, (SelectList)ViewData["HomeClub"], new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.home_club, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.guest_club, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.guest_club, (SelectList)ViewData["GuestClub"], new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.guest_club, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.score, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(model => model.score, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(model => model.score, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.round_id, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.round_id, (SelectList)ViewData["Round"], new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.round_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.season_id, new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.season_id, (SelectList)ViewData["Season"], new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.season_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-4 col-md-12">
                                        <input type="submit" value="Thêm mới" class="btn btn-lg btn-primary" />
                                        <a href="/Admin/Match?season_id=@Request.QueryString["season_id"]&round_id=@Request.QueryString["round_id"]"><i class="fa fa-arrow-left" aria-hidden="true"></i> Trở về</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




